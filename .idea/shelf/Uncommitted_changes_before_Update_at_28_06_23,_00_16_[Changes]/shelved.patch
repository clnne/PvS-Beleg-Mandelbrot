Index: src/bootstrap/BootstrapImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/bootstrap/BootstrapImpl.java b/src/bootstrap/BootstrapImpl.java
new file mode 100644
--- /dev/null	(date 1687804963998)
+++ b/src/bootstrap/BootstrapImpl.java	(date 1687804963998)
@@ -0,0 +1,69 @@
+package bootstrap;
+
+import java.rmi.*;
+import java.rmi.server.*;
+import java.util.*;
+
+@SuppressWarnings("serial")
+public class BootstrapImpl extends UnicastRemoteObject implements Bootstrap
+{
+    private Remote worker;
+    private String name;
+    private List<Remote> workers  = new ArrayList<Remote>();
+    private List<String> nameList = new ArrayList<String>();
+    private String  version = "0.1";
+
+    public BootstrapImpl() throws RemoteException
+    {
+        //  super();
+    }
+
+    public void registerWorker(String name, Remote stub) throws RemoteException {
+        System.out.println("Server: Methode register wurde aufgerufen: " + name);
+        System.out.println("Server: Check Monitor ");
+        synchronized(this) {
+            worker = stub;
+            this.name = name;
+
+            for (int i = 0; i < nameList.size(); i++) {
+                if ( nameList.get(i).equals(name) ) {
+                    workers.set(i, stub);
+                    System.out.println("Server: update existing worker " + name );
+                    return;  // update worker
+                }
+            }
+            System.out.println("Server: new worker registration " + name);
+            workers.add(stub);
+            nameList.add(name);
+        }
+        System.out.println("Server: Listenelemente: " + nameList.size() );
+        return;
+    }
+
+    public Remote getWorker() throws RemoteException {
+        System.out.println("Server: Methode getWorker wurde aufgerufen");
+        return worker;
+    }
+
+    public List<Remote> getWorkerList() throws RemoteException {
+        System.out.println("Server: Methode getWorkerList wurde aufgerufen");
+        return workers;
+    }
+
+    public List<String> getList() throws RemoteException {
+        System.out.println("Server: Methode getList() wurde aufgerufen");
+        return nameList;
+    }
+
+    public void clearList() throws RemoteException {
+        System.out.println("Server: Methode clearList() wurde aufgerufen");
+        workers.clear();
+        nameList.clear();
+        return;
+    }
+
+    public String getVersion() throws RemoteException {
+        System.out.println("Server: Methode getVersion() wurde aufgerufen");
+        return version;
+    }
+}
\ No newline at end of file
Index: src/bootstrap/BootstrapRegistration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/bootstrap/BootstrapRegistration.java b/src/bootstrap/BootstrapRegistration.java
new file mode 100644
--- /dev/null	(date 1687804926746)
+++ b/src/bootstrap/BootstrapRegistration.java	(date 1687804926746)
@@ -0,0 +1,21 @@
+package bootstrap;
+
+import java.rmi.*;
+
+public class BootstrapRegistration
+{
+    public static void main(String args[])
+    {
+        try
+        {
+            //Registry registry = LocateRegistry.createRegistry(1099);
+            Naming.rebind("Bootstrap", new BootstrapImpl());
+            System.out.println("Bootstrap-Server ist gestartet");
+        }
+        catch(Exception e)
+        {
+            System.out.println("Ausnahme: " + e.getMessage());
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1687804052776)
+++ b/.idea/misc.xml	(date 1687804052776)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1687903197741)
+++ b/.idea/vcs.xml	(date 1687903197741)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/bootstrap/Bootstrap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/bootstrap/Bootstrap.java b/src/bootstrap/Bootstrap.java
new file mode 100644
--- /dev/null	(date 1687804982154)
+++ b/src/bootstrap/Bootstrap.java	(date 1687804982154)
@@ -0,0 +1,14 @@
+package bootstrap;
+
+import java.rmi.*;
+import java.util.*;
+
+public interface Bootstrap extends Remote
+{
+    public void registerWorker(String name, Remote stub) throws RemoteException;
+    public Remote getWorker()                            throws RemoteException;
+    public List<Remote> getWorkerList()                  throws RemoteException;
+    public List<String> getList()                        throws RemoteException;
+    public void clearList()                              throws RemoteException;
+    public String getVersion()                           throws RemoteException;
+}
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1687804052756)
+++ b/.idea/modules.xml	(date 1687804052756)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Beleg.iml" filepath="$PROJECT_DIR$/Beleg.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1687804049284)
+++ b/.gitignore	(date 1687804049284)
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1687804055884)
+++ b/.idea/.gitignore	(date 1687804055884)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
